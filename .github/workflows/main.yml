# This is a basic workflow to help you get started with Actions

name: Lucee Docs Builder

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
  pull_request:
    branches: [master]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup CommandBox
        uses: elpete/setup-commandbox@v1.0.1

      # Runs a single command using the runners shell
      - name: Run docs build
        run: ./build.sh
        env:
          DOCS_BRANCH: ${{ github.ref }}
          DOCS_EVENT: ${{ github.event_name }}

      - name: Publish to S3
        uses: docker://justinharringa/s3_website:master
        with:
          args: 'push --site builds/artifacts'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          AWS_CLOUDFRONT_DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION }}
        if: ${{ github.event_name == 'push'}}

      - name: Ping Search Engines with sitemaps
        run: curl https://google.com/ping?sitemap=https://docs.lucee.org/sitemap.xml
        if: ${{ github.event_name == 'push'}}

      # - name: Notify slack
      #   uses: 8398a7/action-slack@v3.9.1
      #   with:
      #     status: ${{ job.status }}
      #     author_name: GitHub Actions # default: 8398a7@action-slack
      #     fields: repo,commit,message,author # default: repo,commit
      #     mention: here
      #     if_mention: failure,cancelled
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      #   if: always() # Pick up events even if the job fails or is canceled.
